@page "/vydelky"
@using System.Globalization
@inject HttpClient Http;



<h1>Výdělky &nbsp; 💸</h1>

<div class="row">
    <div class="col-lg-8">
        <div id="vydelky-table" class="card">
            <div class="card-header">
                <h5>Přehled výdělků</h5>                
            </div>
            <div class="card-body">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Datum</th>
                            <th>Kategorie</th>
                            <th>Subjekt</th>
                            <th>Částka</th>
                            <th>&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (vydelky == null)
                        {
                            <tr><td><em>Loading...</em></td></tr>
                        }
                        else
                        {
                            @foreach (var vydelek in vydelky)
                            {
                                <tr>
                                    <td>@vydelek.Datum.ToShortDateString()</td>
                                    <td>@vydelek.Kategorie</td>
                                    <td>@vydelek.Subjekt</td>
                                    <td>@vydelek.Castka.ToString("C2", CultureInfo.CreateSpecificCulture("en-US"))</td>
                                    <td><button type="button" class="btn btn-danger btn-sm" @onclick="() => OpenDeleteDialog(vydelek)">Smazat</button></td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-lg-4">
        <VydelekForm OnSubmitCallback="@Refresh"></VydelekForm>
    </div>
</div>
<div>&nbsp;</div>
@if (DeleteDialogOpen)
{
    <ModalDialog Title="Opravdu smazat?"
             Text="Tato položka bude vymazána!"
             OnClose="@OnDeleteDialogClose"
             DialogType="ModalDialog.ModalDialogType.DeleteCancel">
    </ModalDialog>
}




@code {
    private Vydelek[] vydelky;

    private Vydelek _vydelekToDelete;
    public bool DeleteDialogOpen { get; set; }

    private async Task OnDeleteDialogClose(bool accepted)
    {
        if (accepted)
        {
            await Http.DeleteAsync($"api/Vydelky/{_vydelekToDelete.Id}");
            await LoadData();
            _vydelekToDelete = null;
        }

        DeleteDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteDialog(Vydelek vydelek)
    {
        DeleteDialogOpen = true;
        _vydelekToDelete = vydelek;
        StateHasChanged();
    }

    protected async override Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        vydelky = await Http.GetFromJsonAsync<Vydelek[]>("api/Vydelky");
        StateHasChanged();
    }

    public async void Refresh()
    {
        await LoadData();
    }

}
